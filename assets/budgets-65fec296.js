const c=(t,s)=>t.map((o,n)=>o-s[n]),l=(...t)=>{var o;const s=new Array((o=t[0])==null?void 0:o.length).fill(0);return t.forEach(n=>n.forEach((a,r)=>s[r]+=a)),s},e=t=>t.reduce((s,o)=>s+o,0),f=t=>e(t)/t.length,g=t=>t.map((s,o)=>e(t.slice(0,o+1))),u=t=>{const s=new Array(12).fill(0);for(const{budgets:o}of t)for(const{values:n}of o)for(let a=0;a<n.length;a++)s[a]+=n[a];return s},d=t=>t.map(s=>{const o=new Array(12).fill(0);for(const{values:n}of s.budgets)for(let a=0;a<n.length;a++)o[a]+=n[a];return{...s,totals:o}});export{g as a,e as b,f as c,l as d,d as f,c as s,u as t};
